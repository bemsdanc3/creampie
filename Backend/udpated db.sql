DROP TABLE IF EXISTS black_list CASCADE;
DROP TABLE IF EXISTS bot_command CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS channels CASCADE;
DROP TABLE IF EXISTS chat_users CASCADE;
DROP TABLE IF EXISTS chats CASCADE;
DROP TABLE IF EXISTS emojies CASCADE;
DROP TABLE IF EXISTS folders CASCADE;
DROP TABLE IF EXISTS friend_list CASCADE;
DROP TABLE IF EXISTS friendship_requests CASCADE;
DROP TABLE IF EXISTS messages CASCADE;
DROP TABLE IF EXISTS msg_media CASCADE;
DROP TABLE IF EXISTS msg_reactions CASCADE;
DROP TABLE IF EXISTS notifications CASCADE;
DROP TABLE IF EXISTS permissions CASCADE;
DROP TABLE IF EXISTS pinned_chats CASCADE;
DROP TABLE IF EXISTS poll_votes CASCADE;
DROP TABLE IF EXISTS poll_options CASCADE;
DROP TABLE IF EXISTS polls CASCADE;
DROP TABLE IF EXISTS roles CASCADE;
DROP TABLE IF EXISTS server_folders CASCADE;
DROP TABLE IF EXISTS server_members CASCADE;
DROP TABLE IF EXISTS servers CASCADE;
DROP TABLE IF EXISTS user_roles CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS voice_members CASCADE;

CREATE TABLE users (
	ID SERIAL PRIMARY KEY,
	login VARCHAR(100),
	pass VARCHAR(100),
	pfp TEXT,
	email VARCHAR(100) UNIQUE,
	is_online BOOLEAN DEFAULT FALSE,
	description TEXT,
	reg_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	is_blocked BOOLEAN DEFAULT FALSE,
	is_bot BOOLEAN DEFAULT FALSE,
	bot_token TEXT
);

CREATE TABLE servers (
	ID SERIAL PRIMARY KEY,
	title VARCHAR(100),
	is_public BOOLEAN DEFAULT FALSE,
	owner_id INTEGER REFERENCES users(ID) ON DELETE CASCADE, 
	pfs TEXT,
	description TEXT
);

CREATE TABLE friend_list (
	ID SERIAL PRIMARY KEY,
	user_id INTEGER REFERENCES users(ID) ON DELETE CASCADE,
	friend_id INTEGER REFERENCES users(ID) ON DELETE CASCADE
);

CREATE TABLE black_list (
	ID SERIAL PRIMARY KEY,
	user_id INTEGER REFERENCES users(ID) ON DELETE CASCADE,
	block_user_id INTEGER REFERENCES users(ID) ON DELETE CASCADE
);

CREATE TABLE friendship_requests (
	ID SERIAL PRIMARY KEY,
	user_id INTEGER REFERENCES users(ID) ON DELETE CASCADE,
	potential_friend_id INT REFERENCES users(ID) ON DELETE CASCADE
);

CREATE TABLE server_members (
	ID SERIAL PRIMARY KEY,
	user_id INTEGER REFERENCES users(ID) ON DELETE CASCADE,
	server_id INTEGER REFERENCES servers(ID) ON DELETE CASCADE,
	server_nickname VARCHAR(100),
	is_banned BOOLEAN DEFAULT FALSE,
	is_muted BOOLEAN DEFAULT FALSE,
	notifications BOOLEAN DEFAULT TRUE
);

CREATE TABLE roles (
	ID SERIAL PRIMARY KEY,
	title TEXT,
	color VARCHAR(10),
	is_admin BOOLEAN DEFAULT FALSE,
	edit_title BOOLEAN DEFAULT FALSE,
	edit_desc BOOLEAN DEFAULT FALSE,
	edit_pfs BOOLEAN DEFAULT FALSE,
	edit_channels BOOLEAN DEFAULT FALSE,
	see_msgs BOOLEAN DEFAULT TRUE,
	can_react BOOLEAN DEFAULT TRUE,
	connect_to_voice BOOLEAN DEFAULT TRUE,
	can_talk BOOLEAN DEFAULT TRUE,
	can_vebka BOOLEAN DEFAULT TRUE,
	can_stream BOOLEAN DEFAULT TRUE,
	edit_nick_self BOOLEAN DEFAULT TRUE,
	edit_pfp_self BOOLEAN DEFAULT FALSE,
	edit_roles BOOLEAN DEFAULT FALSE,
	edit_nick BOOLEAN DEFAULT FALSE,
	edit_pfp BOOLEAN DEFAULT FALSE,
	delete_msgs BOOLEAN DEFAULT FALSE,
	can_mute BOOLEAN DEFAULT FALSE,
	disconnect_from_voice BOOLEAN DEFAULT FALSE,
	can_kick BOOLEAN DEFAULT FALSE,
	can_ban BOOLEAN DEFAULT FALSE,
	can_ping BOOLEAN DEFAULT TRUE,
	can_invite BOOLEAN DEFAULT TRUE,
	create_poll BOOLEAN DEFAULT TRUE,
	can_vote BOOLEAN DEFAULT TRUE,
	move_users_in_voices BOOLEAN DEFAULT FALSE
);

CREATE TABLE chats (
	ID SERIAL PRIMARY KEY,
	title TEXT,
	is_group BOOLEAN DEFAULT FALSE,
	notifications BOOLEAN DEFAULT FALSE
);

CREATE TABLE categories (
	ID SERIAL PRIMARY KEY,
	server_id INT REFERENCES servers(ID) ON DELETE CASCADE,
	title TEXT,
	description TEXT
);

CREATE TABLE channels (
	ID SERIAL PRIMARY KEY,
	title TEXT,
	chan_type VARCHAR(50),
	description TEXT,
	category_id INT REFERENCES categories(ID) ON DELETE CASCADE, 
	server_id INT REFERENCES servers(ID) ON DELETE CASCADE
);

CREATE TABLE chat_users (
	ID SERIAL PRIMARY KEY,
	user_id INT REFERENCES users(ID) ON DELETE CASCADE,
	chat_id INT REFERENCES chats(ID) ON DELETE CASCADE
);

CREATE TABLE messages (
	ID SERIAL PRIMARY KEY,
	user_id INT REFERENCES users(ID) ON DELETE CASCADE,
	chat_id INT REFERENCES chats(ID) ON DELETE CASCADE,
	send_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	content TEXT,
	channel_id INT REFERENCES channels(ID) ON DELETE CASCADE,
	pinned BOOLEAN DEFAULT FALSE,
	reference INT REFERENCES messages(ID) ON DELETE SET NULL
);

CREATE TABLE msg_media (
	ID SERIAL PRIMARY KEY,
	msg_id INT REFERENCES messages(ID) ON DELETE CASCADE,
	file_link TEXT
);

CREATE TABLE voice_members (
	ID SERIAL PRIMARY KEY,
	user_id INT REFERENCES users(ID) ON DELETE CASCADE,
	channel_id INT REFERENCES channels(ID) ON DELETE CASCADE, 
	connection_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	chat_id INT REFERENCES chats(ID) ON DELETE CASCADE,
	date_out TIMESTAMP,
	is_streaming BOOLEAN DEFAULT FALSE,
	is_vebka BOOLEAN DEFAULT FALSE
);

CREATE TABLE folders (
	ID SERIAL PRIMARY KEY,
	title TEXT,
	user_id INT REFERENCES users(ID) ON DELETE CASCADE,
	color VARCHAR(7)
);

CREATE TABLE server_folders (
	ID SERIAL PRIMARY KEY,
	folder_id INT REFERENCES folders(ID) ON DELETE CASCADE,
	server_id INT REFERENCES servers(ID) ON DELETE CASCADE
);

CREATE TABLE pinned_chats (
	ID SERIAL PRIMARY KEY,
	user_id INT REFERENCES users(ID) ON DELETE CASCADE,
	chat_id INT REFERENCES chats(ID) ON DELETE CASCADE
);

CREATE TABLE msg_reactions (
	ID SERIAL PRIMARY KEY,
	user_id INT REFERENCES users(ID) ON DELETE CASCADE,
	message_id INT REFERENCES messages(ID) ON DELETE CASCADE,
	reaction VARCHAR(50)
);

CREATE TABLE notifications (
	ID SERIAL PRIMARY KEY,
	user_id INT REFERENCES users(ID) ON DELETE CASCADE,
	chat_id INT REFERENCES chats(ID) ON DELETE CASCADE,
	channel_id INT REFERENCES channels(ID) ON DELETE CASCADE
);

CREATE TABLE user_roles (
	ID SERIAL PRIMARY KEY,
	user_id INT REFERENCES users(ID) ON DELETE CASCADE,
	role_id INT REFERENCES roles(ID) ON DELETE CASCADE
);

CREATE TABLE emojies (
	ID SERIAL PRIMARY KEY,
	title TEXT,
	file_link TEXT,
	server_id INT REFERENCES servers(ID) ON DELETE CASCADE,
	creator_id INT REFERENCES users(ID) ON DELETE CASCADE,
	chat_id INT REFERENCES chats(ID) ON DELETE CASCADE
);

CREATE TABLE bot_command (
	ID SERIAL PRIMARY KEY,
	bot_id INT REFERENCES users(ID) ON DELETE CASCADE,
	title TEXT,
	description TEXT
);

CREATE TABLE polls (
	ID SERIAL PRIMARY KEY,
	msg_id INT REFERENCES messages(ID) ON DELETE CASCADE,
	msg TEXT,
	creating_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	end_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE poll_options (
	ID SERIAL PRIMARY KEY,
	poll_id INT REFERENCES polls(ID) ON DELETE CASCADE,
	answer_text TEXT
);

CREATE TABLE poll_votes (
	ID SERIAL PRIMARY KEY,
	user_id INT REFERENCES users(ID) ON DELETE CASCADE,
	poll_opt_id INT REFERENCES poll_options(ID) ON DELETE CASCADE
);

CREATE TABLE permissions (
	ID SERIAL PRIMARY KEY,
	chat_id INT REFERENCES chats(ID) ON DELETE CASCADE,
	server_id INT REFERENCES servers(ID) ON DELETE CASCADE,
	channel_id INT REFERENCES channels(ID) ON DELETE CASCADE,
	category_id INT REFERENCES categories(ID) ON DELETE CASCADE,
	role_id INT REFERENCES roles(ID) ON DELETE CASCADE
);